JRE = quando so preciso executar programs em java
JDK = quando preciso programar e executar



Kotlin é compilado e interpretado

terminado o trabalho gera uma compilação e depois um interpretador
pega esses compilados e entende o arquivo pra falar com cada SO

quando vc tem uma liguagem compilada é feito um check sintatico
se o que esta sendo feito ira passar. diferente do JS que quebra
apenas em tempo de execução

posso compilar/interpretar na linguagem final que eu quiser.
posso transformar em java (Kotlin JVM), Javascript(Kotlin/JS)
e nativo Android Ios(Kotlin/native)

commonMain = javaMain, jsmain, macosmain, linuxmain, windows

gradle, gerenciamento de dependencias
N preciso de ;

Tem nullsafety para lançamento de  exceções


{
Created projetct.
src > new Kotlin class/file > file
Visto que ele é poo e funcional posso criar um file sem ter a classe
se fizer sentido pro meu projeto

}

{
tipos primitivos:
int, long, boolean, string, char, float, double, byte

}

{
variaveis:
var a:Int
var b:Long
var letra:char = 'c'

var idade=18 (tipagem por inferencia)
var char = 'c' (tipagem por inferencia char)
var stirng = "c" (tipagem por inferencia string)

Constantes:
val primeiraLetra:Char = 'C'

}
para gerenciar argumentos da main
Modify Run COnfigurations (na seta)
ou no canto superior direito = edit configuration

"program arguments"

shift f10 para executar

----------------


{

for / while/dowhile
não tem foreach, ele já é imbutido dentro do for



for(produto in produtosArray){      /foreach
	//algo
}

for(pneustrocados in 0..4){}

for(contadorDec in 10 downTo 0 step 2){}



}


----------------------

{
List é uma classe com diversos atributos e metodos
e Array embora tenha atributos e metodos está mais proximo a um tipo primitivo

var notas = IntArray(6){90,23,23,23}  //definindo o tamanho do array ele n poder mudar, vai ser sempre 6
val notas = mutableListOf(90,23,23) //listas podem ser mutaveis

principais metodos de gestão de listas/array:
filter = igual a Js
first. pega o primeiro item da lista, e caso seja vazia retorna null ou zero
.last = inverso do de cima
sortedBy/ sortedByDescending 
groupBy

----
Função anonima= função passada como parametro em outra função em ordem de prover seu correto funcionamento
Exempo, num metodo filter vai ser passsada a função com a regra em que a filtragem será avalida

polimorfismo - defino uma função aberta (que pode ser overrided por seus filhos) com open fun nome()
e nos filhos apos herdar (class quadrado:forma) faço override fun nome()


interface/implementação

class conta:Interface1, Interface2
-----------------------------------------------------------------------------


